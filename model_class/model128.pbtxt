node {
  name: "input_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "lambda_6/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "lambda_6/truediv"
  op: "RealDiv"
  input: "input_7"
  input: "lambda_6/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_90/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_90/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04275039955973625
      }
    }
  }
}
node {
  name: "conv2d_90/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04275039955973625
      }
    }
  }
}
node {
  name: "conv2d_90/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_90/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_90/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_90/kernel/Initializer/random_uniform/max"
  input: "conv2d_90/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
}
node {
  name: "conv2d_90/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_90/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_90/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
}
node {
  name: "conv2d_90/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_90/kernel/Initializer/random_uniform/mul"
  input: "conv2d_90/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
}
node {
  name: "conv2d_90/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_90/kernel"
    }
  }
}
node {
  name: "conv2d_90/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_90/kernel"
}
node {
  name: "conv2d_90/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_90/kernel"
  input: "conv2d_90/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_90/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_90/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_90/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_90/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_90/bias"
    }
  }
}
node {
  name: "conv2d_90/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_90/bias"
}
node {
  name: "conv2d_90/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_90/bias"
  input: "conv2d_90/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_90/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_90/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_90/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_90/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_90/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_90/Conv2D"
  op: "Conv2D"
  input: "lambda_6/truediv"
  input: "conv2d_90/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_90/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_90/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_90/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_90/Conv2D"
  input: "conv2d_90/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_90/Relu"
  op: "Relu"
  input: "conv2d_90/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_padding2d_24/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_24/Pad"
  op: "Pad"
  input: "conv2d_90/Relu"
  input: "zero_padding2d_24/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "max_pooling2d_36/MaxPool"
  op: "MaxPool"
  input: "zero_padding2d_24/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_91/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_91/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "conv2d_91/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "conv2d_91/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_91/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_91/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_91/kernel/Initializer/random_uniform/max"
  input: "conv2d_91/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
}
node {
  name: "conv2d_91/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_91/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_91/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
}
node {
  name: "conv2d_91/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_91/kernel/Initializer/random_uniform/mul"
  input: "conv2d_91/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
}
node {
  name: "conv2d_91/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_91/kernel"
    }
  }
}
node {
  name: "conv2d_91/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_91/kernel"
}
node {
  name: "conv2d_91/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_91/kernel"
  input: "conv2d_91/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_91/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_91/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_91/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_91/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_91/bias"
    }
  }
}
node {
  name: "conv2d_91/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_91/bias"
}
node {
  name: "conv2d_91/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_91/bias"
  input: "conv2d_91/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_91/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_91/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_91/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_91/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_91/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_91/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_36/MaxPool"
  input: "conv2d_91/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_91/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_91/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_91/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_91/Conv2D"
  input: "conv2d_91/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_91/Relu"
  op: "Relu"
  input: "conv2d_91/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_92/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_92/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_92/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05103103816509247
      }
    }
  }
}
node {
  name: "conv2d_92/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_92/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_92/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_92/kernel/Initializer/random_uniform/max"
  input: "conv2d_92/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
}
node {
  name: "conv2d_92/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_92/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_92/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
}
node {
  name: "conv2d_92/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_92/kernel/Initializer/random_uniform/mul"
  input: "conv2d_92/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
}
node {
  name: "conv2d_92/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_92/kernel"
    }
  }
}
node {
  name: "conv2d_92/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_92/kernel"
}
node {
  name: "conv2d_92/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_92/kernel"
  input: "conv2d_92/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_92/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_92/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_92/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_92/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_92/bias"
    }
  }
}
node {
  name: "conv2d_92/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_92/bias"
}
node {
  name: "conv2d_92/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_92/bias"
  input: "conv2d_92/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_92/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_92/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_92/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_92/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_92/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_92/Conv2D"
  op: "Conv2D"
  input: "conv2d_91/Relu"
  input: "conv2d_92/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_92/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_92/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_92/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_92/Conv2D"
  input: "conv2d_92/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_92/Relu"
  op: "Relu"
  input: "conv2d_92/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_padding2d_25/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_25/Pad"
  op: "Pad"
  input: "conv2d_92/Relu"
  input: "zero_padding2d_25/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "max_pooling2d_37/MaxPool"
  op: "MaxPool"
  input: "zero_padding2d_25/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_94/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_94/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_94/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14433756470680237
      }
    }
  }
}
node {
  name: "conv2d_94/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_94/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_94/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_94/kernel/Initializer/random_uniform/max"
  input: "conv2d_94/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
}
node {
  name: "conv2d_94/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_94/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_94/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
}
node {
  name: "conv2d_94/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_94/kernel/Initializer/random_uniform/mul"
  input: "conv2d_94/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
}
node {
  name: "conv2d_94/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_94/kernel"
    }
  }
}
node {
  name: "conv2d_94/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_94/kernel"
}
node {
  name: "conv2d_94/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_94/kernel"
  input: "conv2d_94/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_94/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_94/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_94/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_94/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_94/bias"
    }
  }
}
node {
  name: "conv2d_94/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_94/bias"
}
node {
  name: "conv2d_94/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_94/bias"
  input: "conv2d_94/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_94/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_94/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_94/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_94/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_94/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_94/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_37/MaxPool"
  input: "conv2d_94/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_94/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_94/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_94/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_94/Conv2D"
  input: "conv2d_94/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_94/Relu"
  op: "Relu"
  input: "conv2d_94/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_96/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_96/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16984155774116516
      }
    }
  }
}
node {
  name: "conv2d_96/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16984155774116516
      }
    }
  }
}
node {
  name: "conv2d_96/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_96/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_96/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_96/kernel/Initializer/random_uniform/max"
  input: "conv2d_96/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
}
node {
  name: "conv2d_96/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_96/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_96/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
}
node {
  name: "conv2d_96/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_96/kernel/Initializer/random_uniform/mul"
  input: "conv2d_96/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
}
node {
  name: "conv2d_96/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_96/kernel"
    }
  }
}
node {
  name: "conv2d_96/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_96/kernel"
}
node {
  name: "conv2d_96/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_96/kernel"
  input: "conv2d_96/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_96/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_96/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_96/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_96/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_96/bias"
    }
  }
}
node {
  name: "conv2d_96/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_96/bias"
}
node {
  name: "conv2d_96/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_96/bias"
  input: "conv2d_96/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_96/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_96/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_96/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_96/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_96/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_96/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_37/MaxPool"
  input: "conv2d_96/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_96/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_96/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_96/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_96/Conv2D"
  input: "conv2d_96/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_96/Relu"
  op: "Relu"
  input: "conv2d_96/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_98/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_98/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "conv2d_98/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "conv2d_98/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_98/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_98/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_98/kernel/Initializer/random_uniform/max"
  input: "conv2d_98/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
}
node {
  name: "conv2d_98/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_98/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_98/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
}
node {
  name: "conv2d_98/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_98/kernel/Initializer/random_uniform/mul"
  input: "conv2d_98/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
}
node {
  name: "conv2d_98/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_98/kernel"
    }
  }
}
node {
  name: "conv2d_98/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_98/kernel"
}
node {
  name: "conv2d_98/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_98/kernel"
  input: "conv2d_98/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_98/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_98/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_98/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_98/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_98/bias"
    }
  }
}
node {
  name: "conv2d_98/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_98/bias"
}
node {
  name: "conv2d_98/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_98/bias"
  input: "conv2d_98/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_98/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_98/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_98/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_98/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_98/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_98/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_37/MaxPool"
  input: "conv2d_98/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_98/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_98/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_98/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_98/Conv2D"
  input: "conv2d_98/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_98/Relu"
  op: "Relu"
  input: "conv2d_98/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_93/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_93/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "conv2d_93/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "conv2d_93/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_93/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_93/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_93/kernel/Initializer/random_uniform/max"
  input: "conv2d_93/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
}
node {
  name: "conv2d_93/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_93/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_93/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
}
node {
  name: "conv2d_93/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_93/kernel/Initializer/random_uniform/mul"
  input: "conv2d_93/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
}
node {
  name: "conv2d_93/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_93/kernel"
    }
  }
}
node {
  name: "conv2d_93/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_93/kernel"
}
node {
  name: "conv2d_93/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_93/kernel"
  input: "conv2d_93/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_93/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_93/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_93/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_93/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_93/bias"
    }
  }
}
node {
  name: "conv2d_93/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_93/bias"
}
node {
  name: "conv2d_93/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_93/bias"
  input: "conv2d_93/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_93/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_93/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_93/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_93/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_93/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_93/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_37/MaxPool"
  input: "conv2d_93/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_93/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_93/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_93/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_93/Conv2D"
  input: "conv2d_93/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_93/Relu"
  op: "Relu"
  input: "conv2d_93/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_95/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_95/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.054554473608732224
      }
    }
  }
}
node {
  name: "conv2d_95/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.054554473608732224
      }
    }
  }
}
node {
  name: "conv2d_95/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_95/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_95/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_95/kernel/Initializer/random_uniform/max"
  input: "conv2d_95/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
}
node {
  name: "conv2d_95/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_95/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_95/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
}
node {
  name: "conv2d_95/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_95/kernel/Initializer/random_uniform/mul"
  input: "conv2d_95/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
}
node {
  name: "conv2d_95/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_95/kernel"
    }
  }
}
node {
  name: "conv2d_95/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_95/kernel"
}
node {
  name: "conv2d_95/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_95/kernel"
  input: "conv2d_95/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_95/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_95/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_95/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_95/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_95/bias"
    }
  }
}
node {
  name: "conv2d_95/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_95/bias"
}
node {
  name: "conv2d_95/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_95/bias"
  input: "conv2d_95/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_95/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_95/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_95/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_95/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_95/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_95/Conv2D"
  op: "Conv2D"
  input: "conv2d_94/Relu"
  input: "conv2d_95/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_95/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_95/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_95/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_95/Conv2D"
  input: "conv2d_95/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_95/Relu"
  op: "Relu"
  input: "conv2d_95/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_97/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_97/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0707106813788414
      }
    }
  }
}
node {
  name: "conv2d_97/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0707106813788414
      }
    }
  }
}
node {
  name: "conv2d_97/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_97/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_97/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_97/kernel/Initializer/random_uniform/max"
  input: "conv2d_97/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
}
node {
  name: "conv2d_97/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_97/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_97/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
}
node {
  name: "conv2d_97/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_97/kernel/Initializer/random_uniform/mul"
  input: "conv2d_97/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
}
node {
  name: "conv2d_97/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_97/kernel"
    }
  }
}
node {
  name: "conv2d_97/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_97/kernel"
}
node {
  name: "conv2d_97/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_97/kernel"
  input: "conv2d_97/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_97/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_97/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_97/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_97/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_97/bias"
    }
  }
}
node {
  name: "conv2d_97/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_97/bias"
}
node {
  name: "conv2d_97/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_97/bias"
  input: "conv2d_97/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_97/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_97/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_97/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_97/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_97/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_97/Conv2D"
  op: "Conv2D"
  input: "conv2d_96/Relu"
  input: "conv2d_97/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_97/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_97/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_97/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_97/Conv2D"
  input: "conv2d_97/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_97/Relu"
  op: "Relu"
  input: "conv2d_97/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_38/MaxPool"
  op: "MaxPool"
  input: "conv2d_98/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "concatenate_12/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_12/concat"
  op: "ConcatV2"
  input: "conv2d_93/Relu"
  input: "conv2d_95/Relu"
  input: "conv2d_97/Relu"
  input: "max_pooling2d_38/MaxPool"
  input: "concatenate_12/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zero_padding2d_26/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_26/Pad"
  op: "Pad"
  input: "concatenate_12/concat"
  input: "zero_padding2d_26/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "max_pooling2d_39/MaxPool"
  op: "MaxPool"
  input: "zero_padding2d_26/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2d_100/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_100/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.13055823743343353
      }
    }
  }
}
node {
  name: "conv2d_100/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13055823743343353
      }
    }
  }
}
node {
  name: "conv2d_100/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_100/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_100/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_100/kernel/Initializer/random_uniform/max"
  input: "conv2d_100/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
}
node {
  name: "conv2d_100/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_100/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_100/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
}
node {
  name: "conv2d_100/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_100/kernel/Initializer/random_uniform/mul"
  input: "conv2d_100/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
}
node {
  name: "conv2d_100/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_100/kernel"
    }
  }
}
node {
  name: "conv2d_100/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_100/kernel"
}
node {
  name: "conv2d_100/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_100/kernel"
  input: "conv2d_100/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_100/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_100/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_100/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_100/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_100/bias"
    }
  }
}
node {
  name: "conv2d_100/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_100/bias"
}
node {
  name: "conv2d_100/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_100/bias"
  input: "conv2d_100/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_100/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_100/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_100/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_100/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_100/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_100/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_39/MaxPool"
  input: "conv2d_100/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_100/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_100/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_100/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_100/Conv2D"
  input: "conv2d_100/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_100/Relu"
  op: "Relu"
  input: "conv2d_100/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_102/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_102/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14852213859558105
      }
    }
  }
}
node {
  name: "conv2d_102/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14852213859558105
      }
    }
  }
}
node {
  name: "conv2d_102/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_102/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_102/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_102/kernel/Initializer/random_uniform/max"
  input: "conv2d_102/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
}
node {
  name: "conv2d_102/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_102/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_102/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
}
node {
  name: "conv2d_102/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_102/kernel/Initializer/random_uniform/mul"
  input: "conv2d_102/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
}
node {
  name: "conv2d_102/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_102/kernel"
    }
  }
}
node {
  name: "conv2d_102/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_102/kernel"
}
node {
  name: "conv2d_102/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_102/kernel"
  input: "conv2d_102/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_102/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_102/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_102/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_102/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_102/bias"
    }
  }
}
node {
  name: "conv2d_102/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_102/bias"
}
node {
  name: "conv2d_102/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_102/bias"
  input: "conv2d_102/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_102/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_102/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_102/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_102/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_102/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_102/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_39/MaxPool"
  input: "conv2d_102/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_102/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_102/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_102/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_102/Conv2D"
  input: "conv2d_102/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_102/Relu"
  op: "Relu"
  input: "conv2d_102/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_104/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_104/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_104/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1369306445121765
      }
    }
  }
}
node {
  name: "conv2d_104/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_104/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_104/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_104/kernel/Initializer/random_uniform/max"
  input: "conv2d_104/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
}
node {
  name: "conv2d_104/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_104/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_104/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
}
node {
  name: "conv2d_104/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_104/kernel/Initializer/random_uniform/mul"
  input: "conv2d_104/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
}
node {
  name: "conv2d_104/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_104/kernel"
    }
  }
}
node {
  name: "conv2d_104/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_104/kernel"
}
node {
  name: "conv2d_104/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_104/kernel"
  input: "conv2d_104/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_104/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_104/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_104/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_104/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_104/bias"
    }
  }
}
node {
  name: "conv2d_104/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_104/bias"
}
node {
  name: "conv2d_104/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_104/bias"
  input: "conv2d_104/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_104/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_104/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_104/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_104/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_104/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_104/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_39/MaxPool"
  input: "conv2d_104/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_104/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_104/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_104/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_104/Conv2D"
  input: "conv2d_104/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_104/Relu"
  op: "Relu"
  input: "conv2d_104/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_99/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_99/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "conv2d_99/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "conv2d_99/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_99/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_99/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_99/kernel/Initializer/random_uniform/max"
  input: "conv2d_99/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
}
node {
  name: "conv2d_99/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_99/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_99/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
}
node {
  name: "conv2d_99/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_99/kernel/Initializer/random_uniform/mul"
  input: "conv2d_99/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
}
node {
  name: "conv2d_99/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_99/kernel"
    }
  }
}
node {
  name: "conv2d_99/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_99/kernel"
}
node {
  name: "conv2d_99/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_99/kernel"
  input: "conv2d_99/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_99/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_99/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_99/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_99/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_99/bias"
    }
  }
}
node {
  name: "conv2d_99/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_99/bias"
}
node {
  name: "conv2d_99/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_99/bias"
  input: "conv2d_99/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_99/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_99/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_99/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_99/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_99/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_99/Conv2D"
  op: "Conv2D"
  input: "max_pooling2d_39/MaxPool"
  input: "conv2d_99/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_99/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_99/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_99/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_99/Conv2D"
  input: "conv2d_99/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_99/Relu"
  op: "Relu"
  input: "conv2d_99/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_101/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\320\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_101/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04682929068803787
      }
    }
  }
}
node {
  name: "conv2d_101/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04682929068803787
      }
    }
  }
}
node {
  name: "conv2d_101/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_101/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_101/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_101/kernel/Initializer/random_uniform/max"
  input: "conv2d_101/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
}
node {
  name: "conv2d_101/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_101/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_101/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
}
node {
  name: "conv2d_101/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_101/kernel/Initializer/random_uniform/mul"
  input: "conv2d_101/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
}
node {
  name: "conv2d_101/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 208
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_101/kernel"
    }
  }
}
node {
  name: "conv2d_101/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_101/kernel"
}
node {
  name: "conv2d_101/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_101/kernel"
  input: "conv2d_101/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_101/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_101/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_101/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 208
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_101/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 208
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_101/bias"
    }
  }
}
node {
  name: "conv2d_101/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_101/bias"
}
node {
  name: "conv2d_101/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_101/bias"
  input: "conv2d_101/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_101/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_101/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_101/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_101/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_101/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_101/Conv2D"
  op: "Conv2D"
  input: "conv2d_100/Relu"
  input: "conv2d_101/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_101/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_101/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_101/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_101/Conv2D"
  input: "conv2d_101/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_101/Relu"
  op: "Relu"
  input: "conv2d_101/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_103/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\020\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_103/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06123724207282066
      }
    }
  }
}
node {
  name: "conv2d_103/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06123724207282066
      }
    }
  }
}
node {
  name: "conv2d_103/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2d_103/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2d_103/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2d_103/kernel/Initializer/random_uniform/max"
  input: "conv2d_103/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
}
node {
  name: "conv2d_103/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2d_103/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2d_103/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
}
node {
  name: "conv2d_103/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2d_103/kernel/Initializer/random_uniform/mul"
  input: "conv2d_103/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
}
node {
  name: "conv2d_103/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_103/kernel"
    }
  }
}
node {
  name: "conv2d_103/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_103/kernel"
}
node {
  name: "conv2d_103/kernel/Assign"
  op: "AssignVariableOp"
  input: "conv2d_103/kernel"
  input: "conv2d_103/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_103/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_103/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_103/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2d_103/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "conv2d_103/bias"
    }
  }
}
node {
  name: "conv2d_103/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_103/bias"
}
node {
  name: "conv2d_103/bias/Assign"
  op: "AssignVariableOp"
  input: "conv2d_103/bias"
  input: "conv2d_103/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_103/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_103/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_103/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2d_103/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_103/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_103/Conv2D"
  op: "Conv2D"
  input: "conv2d_102/Relu"
  input: "conv2d_103/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2d_103/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_103/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2d_103/BiasAdd"
  op: "BiasAdd"
  input: "conv2d_103/Conv2D"
  input: "conv2d_103/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv2d_103/Relu"
  op: "Relu"
  input: "conv2d_103/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_40/MaxPool"
  op: "MaxPool"
  input: "conv2d_104/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "concatenate_13/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "concatenate_13/concat"
  op: "ConcatV2"
  input: "conv2d_99/Relu"
  input: "conv2d_101/Relu"
  input: "conv2d_103/Relu"
  input: "max_pooling2d_40/MaxPool"
  input: "concatenate_13/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "zero_padding2d_27/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_27/Pad"
  op: "Pad"
  input: "concatenate_13/concat"
  input: "zero_padding2d_27/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "max_pooling2d_41/MaxPool"
  op: "MaxPool"
  input: "zero_padding2d_27/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "global_average_pooling2d_6/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "global_average_pooling2d_6/Mean"
  op: "Mean"
  input: "max_pooling2d_41/MaxPool"
  input: "global_average_pooling2d_6/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_6/Identity"
  op: "Identity"
  input: "global_average_pooling2d_6/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10690449923276901
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10690449923276901
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dense_6/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "dense_6/kernel/Initializer/random_uniform/max"
  input: "dense_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "dense_6/kernel/Initializer/random_uniform/RandomUniform"
  input: "dense_6/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
}
node {
  name: "dense_6/kernel/Initializer/random_uniform"
  op: "Add"
  input: "dense_6/kernel/Initializer/random_uniform/mul"
  input: "dense_6/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
}
node {
  name: "dense_6/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_6/kernel"
    }
  }
}
node {
  name: "dense_6/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_6/kernel"
}
node {
  name: "dense_6/kernel/Assign"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "dense_6/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "dense_6/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "dense_6/bias"
    }
  }
}
node {
  name: "dense_6/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "dense_6/bias"
}
node {
  name: "dense_6/bias/Assign"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "dense_6/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/MatMul"
  op: "MatMul"
  input: "dropout_6/Identity"
  input: "dense_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_6/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_6/BiasAdd"
  op: "BiasAdd"
  input: "dense_6/MatMul"
  input: "dense_6/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_6/Softmax"
  op: "Softmax"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "conv2d_90/kernel"
  input: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "conv2d_90/kernel"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "conv2d_90/bias"
  input: "Placeholder_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "conv2d_90/bias"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "conv2d_91/kernel"
  input: "Placeholder_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "conv2d_91/kernel"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "conv2d_91/bias"
  input: "Placeholder_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "conv2d_91/bias"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "conv2d_92/kernel"
  input: "Placeholder_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "conv2d_92/kernel"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "conv2d_92/bias"
  input: "Placeholder_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "conv2d_92/bias"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "conv2d_94/kernel"
  input: "Placeholder_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "conv2d_94/kernel"
  input: "^AssignVariableOp_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "conv2d_94/bias"
  input: "Placeholder_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "conv2d_94/bias"
  input: "^AssignVariableOp_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "conv2d_96/kernel"
  input: "Placeholder_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "conv2d_96/kernel"
  input: "^AssignVariableOp_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "conv2d_96/bias"
  input: "Placeholder_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "conv2d_96/bias"
  input: "^AssignVariableOp_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "conv2d_98/kernel"
  input: "Placeholder_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "conv2d_98/kernel"
  input: "^AssignVariableOp_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "conv2d_98/bias"
  input: "Placeholder_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "conv2d_98/bias"
  input: "^AssignVariableOp_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "conv2d_93/kernel"
  input: "Placeholder_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_12"
  op: "ReadVariableOp"
  input: "conv2d_93/kernel"
  input: "^AssignVariableOp_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "conv2d_93/bias"
  input: "Placeholder_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_13"
  op: "ReadVariableOp"
  input: "conv2d_93/bias"
  input: "^AssignVariableOp_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "conv2d_95/kernel"
  input: "Placeholder_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_14"
  op: "ReadVariableOp"
  input: "conv2d_95/kernel"
  input: "^AssignVariableOp_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "conv2d_95/bias"
  input: "Placeholder_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_15"
  op: "ReadVariableOp"
  input: "conv2d_95/bias"
  input: "^AssignVariableOp_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "conv2d_97/kernel"
  input: "Placeholder_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_16"
  op: "ReadVariableOp"
  input: "conv2d_97/kernel"
  input: "^AssignVariableOp_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "conv2d_97/bias"
  input: "Placeholder_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_17"
  op: "ReadVariableOp"
  input: "conv2d_97/bias"
  input: "^AssignVariableOp_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "conv2d_100/kernel"
  input: "Placeholder_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_18"
  op: "ReadVariableOp"
  input: "conv2d_100/kernel"
  input: "^AssignVariableOp_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "conv2d_100/bias"
  input: "Placeholder_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_19"
  op: "ReadVariableOp"
  input: "conv2d_100/bias"
  input: "^AssignVariableOp_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "conv2d_102/kernel"
  input: "Placeholder_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_20"
  op: "ReadVariableOp"
  input: "conv2d_102/kernel"
  input: "^AssignVariableOp_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "conv2d_102/bias"
  input: "Placeholder_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_21"
  op: "ReadVariableOp"
  input: "conv2d_102/bias"
  input: "^AssignVariableOp_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "conv2d_104/kernel"
  input: "Placeholder_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_22"
  op: "ReadVariableOp"
  input: "conv2d_104/kernel"
  input: "^AssignVariableOp_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "conv2d_104/bias"
  input: "Placeholder_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_23"
  op: "ReadVariableOp"
  input: "conv2d_104/bias"
  input: "^AssignVariableOp_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "conv2d_99/kernel"
  input: "Placeholder_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_24"
  op: "ReadVariableOp"
  input: "conv2d_99/kernel"
  input: "^AssignVariableOp_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "conv2d_99/bias"
  input: "Placeholder_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_25"
  op: "ReadVariableOp"
  input: "conv2d_99/bias"
  input: "^AssignVariableOp_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "conv2d_101/kernel"
  input: "Placeholder_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_26"
  op: "ReadVariableOp"
  input: "conv2d_101/kernel"
  input: "^AssignVariableOp_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "conv2d_101/bias"
  input: "Placeholder_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_27"
  op: "ReadVariableOp"
  input: "conv2d_101/bias"
  input: "^AssignVariableOp_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "conv2d_103/kernel"
  input: "Placeholder_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_28"
  op: "ReadVariableOp"
  input: "conv2d_103/kernel"
  input: "^AssignVariableOp_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "conv2d_103/bias"
  input: "Placeholder_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_29"
  op: "ReadVariableOp"
  input: "conv2d_103/bias"
  input: "^AssignVariableOp_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "dense_6/kernel"
  input: "Placeholder_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_30"
  op: "ReadVariableOp"
  input: "dense_6/kernel"
  input: "^AssignVariableOp_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "dense_6/bias"
  input: "Placeholder_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ReadVariableOp_31"
  op: "ReadVariableOp"
  input: "dense_6/bias"
  input: "^AssignVariableOp_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "conv2d_97/bias"
}
node {
  name: "VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "conv2d_93/kernel"
}
node {
  name: "VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "conv2d_90/kernel"
}
node {
  name: "VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "conv2d_92/bias"
}
node {
  name: "VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "conv2d_94/bias"
}
node {
  name: "VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "conv2d_96/kernel"
}
node {
  name: "VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "conv2d_98/kernel"
}
node {
  name: "VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "conv2d_100/kernel"
}
node {
  name: "VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "conv2d_102/kernel"
}
node {
  name: "VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "conv2d_102/bias"
}
node {
  name: "VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "conv2d_95/bias"
}
node {
  name: "VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "conv2d_91/bias"
}
node {
  name: "VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "conv2d_100/bias"
}
node {
  name: "VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "conv2d_101/bias"
}
node {
  name: "VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "conv2d_103/bias"
}
node {
  name: "VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "conv2d_103/kernel"
}
node {
  name: "VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "dense_6/bias"
}
node {
  name: "VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "conv2d_93/bias"
}
node {
  name: "VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "conv2d_97/kernel"
}
node {
  name: "VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "conv2d_92/kernel"
}
node {
  name: "VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "conv2d_96/bias"
}
node {
  name: "VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "conv2d_98/bias"
}
node {
  name: "VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "conv2d_95/kernel"
}
node {
  name: "VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "conv2d_99/kernel"
}
node {
  name: "VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "conv2d_91/kernel"
}
node {
  name: "VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "conv2d_90/bias"
}
node {
  name: "VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "conv2d_94/kernel"
}
node {
  name: "VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "conv2d_104/bias"
}
node {
  name: "VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "conv2d_99/bias"
}
node {
  name: "VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "conv2d_101/kernel"
}
node {
  name: "VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "dense_6/kernel"
}
node {
  name: "VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "conv2d_104/kernel"
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv2d_100/bias/Assign"
  input: "^conv2d_100/kernel/Assign"
  input: "^conv2d_101/bias/Assign"
  input: "^conv2d_101/kernel/Assign"
  input: "^conv2d_102/bias/Assign"
  input: "^conv2d_102/kernel/Assign"
  input: "^conv2d_103/bias/Assign"
  input: "^conv2d_103/kernel/Assign"
  input: "^conv2d_104/bias/Assign"
  input: "^conv2d_104/kernel/Assign"
  input: "^conv2d_90/bias/Assign"
  input: "^conv2d_90/kernel/Assign"
  input: "^conv2d_91/bias/Assign"
  input: "^conv2d_91/kernel/Assign"
  input: "^conv2d_92/bias/Assign"
  input: "^conv2d_92/kernel/Assign"
  input: "^conv2d_93/bias/Assign"
  input: "^conv2d_93/kernel/Assign"
  input: "^conv2d_94/bias/Assign"
  input: "^conv2d_94/kernel/Assign"
  input: "^conv2d_95/bias/Assign"
  input: "^conv2d_95/kernel/Assign"
  input: "^conv2d_96/bias/Assign"
  input: "^conv2d_96/kernel/Assign"
  input: "^conv2d_97/bias/Assign"
  input: "^conv2d_97/kernel/Assign"
  input: "^conv2d_98/bias/Assign"
  input: "^conv2d_98/kernel/Assign"
  input: "^conv2d_99/bias/Assign"
  input: "^conv2d_99/kernel/Assign"
  input: "^dense_6/bias/Assign"
  input: "^dense_6/kernel/Assign"
}
node {
  name: "dense_6_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "total/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@total"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "total"
    }
  }
}
node {
  name: "total/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "total/Assign"
  op: "AssignVariableOp"
  input: "total"
  input: "total/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "count"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@count"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "count"
    }
  }
}
node {
  name: "count/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "count/Assign"
  op: "AssignVariableOp"
  input: "count"
  input: "count/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "count/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "count"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax"
  op: "ArgMax"
  input: "dense_6_target"
  input: "metrics/acc/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/acc/ArgMax_1"
  op: "ArgMax"
  input: "dense_6/Softmax"
  input: "metrics/acc/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/acc/Equal"
  op: "Equal"
  input: "metrics/acc/ArgMax"
  input: "metrics/acc/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "metrics/acc/Cast"
  op: "Cast"
  input: "metrics/acc/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/acc/Sum"
  op: "Sum"
  input: "metrics/acc/Cast"
  input: "metrics/acc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "total"
  input: "metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/Sum"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Size"
  op: "Size"
  input: "metrics/acc/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "metrics/acc/Cast_1"
  op: "Cast"
  input: "metrics/acc/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "metrics/acc/AssignAddVariableOp_1"
  op: "AssignAddVariableOp"
  input: "count"
  input: "metrics/acc/Cast_1"
  input: "^metrics/acc/AssignAddVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp"
  op: "ReadVariableOp"
  input: "total"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "count"
  input: "^metrics/acc/AssignAddVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/div_no_nan"
  op: "DivNoNan"
  input: "metrics/acc/div_no_nan/ReadVariableOp"
  input: "metrics/acc/div_no_nan/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/acc/Identity"
  op: "Identity"
  input: "metrics/acc/div_no_nan"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_6_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Shape"
  op: "Shape"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Rank_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Shape_1"
  op: "Shape"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub"
  op: "Sub"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Rank_1"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice/begin"
  op: "Pack"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice"
  op: "Slice"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Shape_1"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice/begin"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat"
  op: "ConcatV2"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat/values_0"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape"
  op: "Reshape"
  input: "dense_6/BiasAdd"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Rank_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Shape_2"
  op: "Shape"
  input: "dense_6_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub_1"
  op: "Sub"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Rank_2"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  op: "Pack"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_1"
  op: "Slice"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Shape_2"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_1/begin"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat_1"
  op: "ConcatV2"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat_1/values_0"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_1"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_1"
  op: "Reshape"
  input: "dense_6_target"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub_2"
  op: "Sub"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Rank"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  op: "Pack"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_2"
  op: "Slice"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Shape"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_2/begin"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2"
  op: "Reshape"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "^loss/dense_6_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^loss/dense_6_loss/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "loss/dense_6_loss/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "loss/dense_6_loss/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "loss/dense_6_loss/weighted_loss/Cast/x"
  input: "loss/dense_6_loss/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_6_loss/weighted_loss/Mul"
  op: "Mul"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "loss/dense_6_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/dense_6_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/Sum"
  op: "Sum"
  input: "loss/dense_6_loss/weighted_loss/Mul"
  input: "loss/dense_6_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_6_loss/num_elements"
  op: "Size"
  input: "loss/dense_6_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "loss/dense_6_loss/num_elements/Cast"
  op: "Cast"
  input: "loss/dense_6_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_6_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/dense_6_loss/Sum_1"
  op: "Sum"
  input: "loss/dense_6_loss/Sum"
  input: "loss/dense_6_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/dense_6_loss/value"
  op: "DivNoNan"
  input: "loss/dense_6_loss/Sum_1"
  input: "loss/dense_6_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/dense_6_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/Fill"
  op: "Fill"
  input: "training/Adam/gradients/gradients/Shape"
  input: "training/Adam/gradients/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/Fill"
  input: "loss/dense_6_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adam/gradients/gradients/Fill"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "training/Adam/gradients/gradients/loss/mul_grad/Mul_1"
  input: "loss/dense_6_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/div_no_nan"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Neg"
  op: "Neg"
  input: "loss/dense_6_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Neg"
  input: "loss/dense_6_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/div_no_nan_1"
  input: "loss/dense_6_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/mul_grad/Mul_1"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/mul"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/value_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_1_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_1_grad/Tile"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Shape"
  op: "Shape"
  input: "loss/dense_6_loss/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Shape"
  op: "Shape"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "loss/dense_6_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Shape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Tile"
  input: "loss/dense_6_loss/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Sum"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Mul"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Sum"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Mul_1"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Sum_1"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/weighted_loss/Mul_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zeros_like"
  op: "ZerosLike"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  op: "ExpandDims"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/mul"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/ExpandDims"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/Neg"
  op: "Neg"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_2_grad/Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/mul_1"
  op: "Mul"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/ExpandDims_1"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  op: "Shape"
  input: "dense_6/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits_grad/mul"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dense_6/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dense_6/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  input: "dense_6/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/dense_6/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "dropout_6/Identity"
  input: "training/Adam/gradients/gradients/loss/dense_6_loss/softmax_cross_entropy_with_logits/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
  op: "Shape"
  input: "max_pooling2d_41/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/add"
  op: "AddV2"
  input: "global_average_pooling2d_6/Mean/reduction_indices"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/mod"
  op: "FloorMod"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/add"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/range"
  op: "Range"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/range/start"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Size"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Fill"
  op: "Fill"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape_1"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/range"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/mod"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/DynamicStitch"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/dense_6/MatMul_grad/MatMul"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Reshape"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape_2"
  op: "Shape"
  input: "max_pooling2d_41/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape_3"
  op: "Shape"
  input: "global_average_pooling2d_6/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Prod"
  op: "Prod"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape_2"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Shape_3"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Prod_1"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Prod"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Cast"
  op: "Cast"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Tile"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/max_pooling2d_41/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "zero_padding2d_27/Pad"
  input: "max_pooling2d_41/MaxPool"
  input: "training/Adam/gradients/gradients/global_average_pooling2d_6/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/stack"
  op: "Pack"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Rank"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice"
  op: "Slice"
  input: "zero_padding2d_27/Pad/paddings"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice/begin"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Shape"
  op: "Shape"
  input: "concatenate_13/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/gradients/max_pooling2d_41/MaxPool_grad/MaxPoolGrad"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Reshape"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_13/concat/axis"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Shape"
  op: "Shape"
  input: "conv2d_99/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_99/Relu"
  input: "conv2d_101/Relu"
  input: "conv2d_103/Relu"
  input: "max_pooling2d_40/MaxPool"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/mod"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN:2"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN:3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Slice"
  op: "Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice_1"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ConcatOffset"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice_1"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ConcatOffset:1"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Slice_2"
  op: "Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice_1"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ConcatOffset:2"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Slice_3"
  op: "Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_27/Pad_grad/Slice_1"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ConcatOffset:3"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/ShapeN:3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_99/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Slice"
  input: "conv2d_99/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_101/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Slice_1"
  input: "conv2d_101/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_103/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Slice_2"
  input: "conv2d_103/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/max_pooling2d_40/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_104/Relu"
  input: "max_pooling2d_40/MaxPool"
  input: "training/Adam/gradients/gradients/concatenate_13/concat_grad/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_99/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_99/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_101/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_101/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_103/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_103/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_104/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/max_pooling2d_40/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_104/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_99/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_39/MaxPool"
  input: "conv2d_99/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_99/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_99/Conv2D_grad/ShapeN"
  input: "conv2d_99/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_99/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_99/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_39/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_99/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_99/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_101/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_100/Relu"
  input: "conv2d_101/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_101/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_101/Conv2D_grad/ShapeN"
  input: "conv2d_101/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_101/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_101/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_100/Relu"
  input: "training/Adam/gradients/gradients/conv2d_101/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_101/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_103/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_102/Relu"
  input: "conv2d_103/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_103/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_103/Conv2D_grad/ShapeN"
  input: "conv2d_103/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_103/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_103/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_102/Relu"
  input: "training/Adam/gradients/gradients/conv2d_103/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_103/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_104/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_104/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_100/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/conv2d_101/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_100/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_102/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/conv2d_103/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_102/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_104/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_39/MaxPool"
  input: "conv2d_104/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_104/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_104/Conv2D_grad/ShapeN"
  input: "conv2d_104/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_104/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_104/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_39/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_104/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_104/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_100/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_100/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_102/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_102/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_100/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_39/MaxPool"
  input: "conv2d_100/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_100/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_100/Conv2D_grad/ShapeN"
  input: "conv2d_100/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_100/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_100/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_39/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_100/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_100/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_102/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_39/MaxPool"
  input: "conv2d_102/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_102/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_102/Conv2D_grad/ShapeN"
  input: "conv2d_102/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_102/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_102/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_39/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_102/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_102/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/AddN"
  op: "AddN"
  input: "training/Adam/gradients/gradients/conv2d_99/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_104/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_100/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_102/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/conv2d_99/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/max_pooling2d_39/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "zero_padding2d_26/Pad"
  input: "max_pooling2d_39/MaxPool"
  input: "training/Adam/gradients/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/stack"
  op: "Pack"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Rank"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice"
  op: "Slice"
  input: "zero_padding2d_26/Pad/paddings"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice/begin"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Shape"
  op: "Shape"
  input: "concatenate_12/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/gradients/max_pooling2d_39/MaxPool_grad/MaxPoolGrad"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Reshape"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_12/concat/axis"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Shape"
  op: "Shape"
  input: "conv2d_93/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_93/Relu"
  input: "conv2d_95/Relu"
  input: "conv2d_97/Relu"
  input: "max_pooling2d_38/MaxPool"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/mod"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN:2"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN:3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Slice"
  op: "Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice_1"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ConcatOffset"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice_1"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ConcatOffset:1"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Slice_2"
  op: "Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice_1"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ConcatOffset:2"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Slice_3"
  op: "Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_26/Pad_grad/Slice_1"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ConcatOffset:3"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/ShapeN:3"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_93/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Slice"
  input: "conv2d_93/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_95/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Slice_1"
  input: "conv2d_95/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_97/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Slice_2"
  input: "conv2d_97/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/max_pooling2d_38/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "conv2d_98/Relu"
  input: "max_pooling2d_38/MaxPool"
  input: "training/Adam/gradients/gradients/concatenate_12/concat_grad/Slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_93/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_93/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_95/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_95/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_97/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_97/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_98/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/max_pooling2d_38/MaxPool_grad/MaxPoolGrad"
  input: "conv2d_98/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_93/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_37/MaxPool"
  input: "conv2d_93/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_93/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_93/Conv2D_grad/ShapeN"
  input: "conv2d_93/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_93/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_93/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_37/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_93/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_93/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_95/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_94/Relu"
  input: "conv2d_95/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_95/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_95/Conv2D_grad/ShapeN"
  input: "conv2d_95/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_95/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_95/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_94/Relu"
  input: "training/Adam/gradients/gradients/conv2d_95/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_95/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_97/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_96/Relu"
  input: "conv2d_97/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_97/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_97/Conv2D_grad/ShapeN"
  input: "conv2d_97/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_97/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_97/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_96/Relu"
  input: "training/Adam/gradients/gradients/conv2d_97/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_97/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_98/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_98/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_94/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/conv2d_95/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_94/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_96/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/conv2d_97/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_96/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_98/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_37/MaxPool"
  input: "conv2d_98/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_98/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_98/Conv2D_grad/ShapeN"
  input: "conv2d_98/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_98/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_98/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_37/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_98/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_98/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_94/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_94/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_96/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_96/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_94/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_37/MaxPool"
  input: "conv2d_94/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_94/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_94/Conv2D_grad/ShapeN"
  input: "conv2d_94/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_94/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_94/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_37/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_94/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_94/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_96/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_37/MaxPool"
  input: "conv2d_96/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_96/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_96/Conv2D_grad/ShapeN"
  input: "conv2d_96/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_96/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_96/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_37/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_96/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_96/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/AddN_1"
  op: "AddN"
  input: "training/Adam/gradients/gradients/conv2d_93/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_98/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_94/Conv2D_grad/Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_96/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/gradients/gradients/conv2d_93/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/max_pooling2d_37/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "zero_padding2d_25/Pad"
  input: "max_pooling2d_37/MaxPool"
  input: "training/Adam/gradients/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/stack"
  op: "Pack"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Rank"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Slice"
  op: "Slice"
  input: "zero_padding2d_25/Pad/paddings"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Slice/begin"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Shape"
  op: "Shape"
  input: "conv2d_92/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/gradients/max_pooling2d_37/MaxPool_grad/MaxPoolGrad"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Reshape"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_92/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/zero_padding2d_25/Pad_grad/Slice_1"
  input: "conv2d_92/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_92/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_92/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_92/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "conv2d_91/Relu"
  input: "conv2d_92/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_92/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_92/Conv2D_grad/ShapeN"
  input: "conv2d_92/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_92/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_92/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "conv2d_91/Relu"
  input: "training/Adam/gradients/gradients/conv2d_92/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_92/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_91/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/conv2d_92/Conv2D_grad/Conv2DBackpropInput"
  input: "conv2d_91/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_91/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_91/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_91/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "max_pooling2d_36/MaxPool"
  input: "conv2d_91/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_91/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_91/Conv2D_grad/ShapeN"
  input: "conv2d_91/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_91/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_91/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "max_pooling2d_36/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_91/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_91/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/max_pooling2d_36/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "zero_padding2d_24/Pad"
  input: "max_pooling2d_36/MaxPool"
  input: "training/Adam/gradients/gradients/conv2d_91/Conv2D_grad/Conv2DBackpropInput"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/stack"
  op: "Pack"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Rank"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Slice"
  op: "Slice"
  input: "zero_padding2d_24/Pad/paddings"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Slice/begin"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Slice"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Shape"
  op: "Shape"
  input: "conv2d_90/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adam/gradients/gradients/max_pooling2d_36/MaxPool_grad/MaxPoolGrad"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Reshape"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_90/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adam/gradients/gradients/zero_padding2d_24/Pad_grad/Slice_1"
  input: "conv2d_90/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_90/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adam/gradients/gradients/conv2d_90/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_90/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "lambda_6/truediv"
  input: "conv2d_90/Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_90/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adam/gradients/gradients/conv2d_90/Conv2D_grad/ShapeN"
  input: "conv2d_90/Conv2D/ReadVariableOp"
  input: "training/Adam/gradients/gradients/conv2d_90/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/gradients/gradients/conv2d_90/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "lambda_6/truediv"
  input: "training/Adam/gradients/gradients/conv2d_90/Conv2D_grad/ShapeN:1"
  input: "training/Adam/gradients/gradients/conv2d_90/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adam/iter/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/iter"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "training/Adam/iter"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/iter"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/iter"
    }
  }
}
node {
  name: "training/Adam/iter/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/iter"
}
node {
  name: "training/Adam/iter/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/iter"
  input: "training/Adam/iter/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/iter/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/iter"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/beta_1/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/beta_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "training/Adam/beta_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/beta_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/beta_1"
    }
  }
}
node {
  name: "training/Adam/beta_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/beta_1"
}
node {
  name: "training/Adam/beta_1/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/beta_1"
  input: "training/Adam/beta_1/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/beta_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/beta_2/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/beta_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "training/Adam/beta_2"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/beta_2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/beta_2"
    }
  }
}
node {
  name: "training/Adam/beta_2/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/beta_2"
}
node {
  name: "training/Adam/beta_2/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/beta_2"
  input: "training/Adam/beta_2/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/beta_2/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/decay/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/decay"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/decay"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/decay"
    }
  }
}
node {
  name: "training/Adam/decay/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/decay"
}
node {
  name: "training/Adam/decay/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/decay"
  input: "training/Adam/decay/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/decay/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/decay"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/learning_rate/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "training/Adam/learning_rate"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adam/learning_rate"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/learning_rate"
    }
  }
}
node {
  name: "training/Adam/learning_rate/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/learning_rate"
}
node {
  name: "training/Adam/learning_rate/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/learning_rate"
  input: "training/Adam/learning_rate/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/learning_rate/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_90/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_90/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_90/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_90/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_90/kernel/m"
  input: "training/Adam/conv2d_90/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_90/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_90/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_90/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_90/bias/m"
  input: "training/Adam/conv2d_90/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_90/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_91/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_91/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_91/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_91/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_91/kernel/m"
  input: "training/Adam/conv2d_91/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_91/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_91/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_91/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_91/bias/m"
  input: "training/Adam/conv2d_91/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_91/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_92/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_92/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_92/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_92/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_92/kernel/m"
  input: "training/Adam/conv2d_92/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_92/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_92/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_92/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_92/bias/m"
  input: "training/Adam/conv2d_92/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_92/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_94/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_94/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_94/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_94/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_94/kernel/m"
  input: "training/Adam/conv2d_94/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_94/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_94/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_94/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_94/bias/m"
  input: "training/Adam/conv2d_94/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_94/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_96/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_96/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_96/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_96/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_96/kernel/m"
  input: "training/Adam/conv2d_96/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_96/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_96/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_96/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_96/bias/m"
  input: "training/Adam/conv2d_96/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_96/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_98/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_98/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_98/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_98/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_98/kernel/m"
  input: "training/Adam/conv2d_98/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_98/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_98/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_98/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_98/bias/m"
  input: "training/Adam/conv2d_98/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_98/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_93/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_93/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_93/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_93/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_93/kernel/m"
  input: "training/Adam/conv2d_93/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_93/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_93/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_93/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_93/bias/m"
  input: "training/Adam/conv2d_93/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_93/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_95/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_95/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_95/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_95/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_95/kernel/m"
  input: "training/Adam/conv2d_95/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_95/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_95/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_95/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_95/bias/m"
  input: "training/Adam/conv2d_95/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_95/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_97/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_97/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_97/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_97/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_97/kernel/m"
  input: "training/Adam/conv2d_97/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_97/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_97/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_97/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_97/bias/m"
  input: "training/Adam/conv2d_97/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_97/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_100/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_100/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_100/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_100/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_100/kernel/m"
  input: "training/Adam/conv2d_100/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_100/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_100/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_100/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_100/bias/m"
  input: "training/Adam/conv2d_100/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_100/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_102/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_102/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_102/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_102/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_102/kernel/m"
  input: "training/Adam/conv2d_102/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_102/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_102/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_102/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_102/bias/m"
  input: "training/Adam/conv2d_102/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_102/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_104/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_104/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_104/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_104/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_104/kernel/m"
  input: "training/Adam/conv2d_104/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_104/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_104/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_104/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_104/bias/m"
  input: "training/Adam/conv2d_104/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_104/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_99/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_99/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_99/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_99/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_99/kernel/m"
  input: "training/Adam/conv2d_99/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_99/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_99/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_99/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_99/bias/m"
  input: "training/Adam/conv2d_99/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_99/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\320\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_101/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_101/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 208
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_101/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_101/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_101/kernel/m"
  input: "training/Adam/conv2d_101/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_101/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 208
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 208
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_101/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_101/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_101/bias/m"
  input: "training/Adam/conv2d_101/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_101/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\020\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_103/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_103/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_103/kernel/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_103/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_103/kernel/m"
  input: "training/Adam/conv2d_103/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_103/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_103/bias/m"
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_103/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_103/bias/m"
  input: "training/Adam/conv2d_103/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_103/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/m/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/m/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/m/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/dense_6/kernel/m/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/dense_6/kernel/m/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/dense_6/kernel/m"
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense_6/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/dense_6/kernel/m"
  input: "training/Adam/dense_6/kernel/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/dense_6/kernel/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/m/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/m"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/dense_6/bias/m"
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/m/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense_6/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/m/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/dense_6/bias/m"
  input: "training/Adam/dense_6/bias/m/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/m/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/dense_6/bias/m"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_90/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_90/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_90/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_90/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_90/kernel/v"
  input: "training/Adam/conv2d_90/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_90/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_90/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_90/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_90/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_90/bias/v"
  input: "training/Adam/conv2d_90/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_90/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_90/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_91/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_91/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_91/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_91/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_91/kernel/v"
  input: "training/Adam/conv2d_91/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_91/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_91/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_91/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_91/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_91/bias/v"
  input: "training/Adam/conv2d_91/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_91/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_91/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_92/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_92/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_92/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_92/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_92/kernel/v"
  input: "training/Adam/conv2d_92/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_92/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_92/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_92/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_92/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_92/bias/v"
  input: "training/Adam/conv2d_92/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_92/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_92/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_94/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_94/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_94/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_94/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_94/kernel/v"
  input: "training/Adam/conv2d_94/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_94/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_94/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_94/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_94/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_94/bias/v"
  input: "training/Adam/conv2d_94/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_94/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_94/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_96/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_96/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_96/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_96/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_96/kernel/v"
  input: "training/Adam/conv2d_96/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_96/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_96/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_96/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_96/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_96/bias/v"
  input: "training/Adam/conv2d_96/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_96/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_96/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_98/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_98/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_98/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_98/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_98/kernel/v"
  input: "training/Adam/conv2d_98/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_98/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_98/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_98/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_98/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_98/bias/v"
  input: "training/Adam/conv2d_98/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_98/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_98/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_93/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_93/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_93/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_93/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_93/kernel/v"
  input: "training/Adam/conv2d_93/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_93/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_93/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_93/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_93/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_93/bias/v"
  input: "training/Adam/conv2d_93/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_93/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_93/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_95/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_95/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_95/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_95/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_95/kernel/v"
  input: "training/Adam/conv2d_95/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_95/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_95/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_95/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_95/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_95/bias/v"
  input: "training/Adam/conv2d_95/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_95/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_95/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\020\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_97/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_97/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_97/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_97/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_97/kernel/v"
  input: "training/Adam/conv2d_97/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_97/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_97/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_97/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_97/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_97/bias/v"
  input: "training/Adam/conv2d_97/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_97/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_97/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_100/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_100/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_100/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_100/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_100/kernel/v"
  input: "training/Adam/conv2d_100/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_100/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_100/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_100/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_100/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_100/bias/v"
  input: "training/Adam/conv2d_100/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_100/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_100/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_102/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_102/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_102/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_102/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_102/kernel/v"
  input: "training/Adam/conv2d_102/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_102/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_102/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_102/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_102/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_102/bias/v"
  input: "training/Adam/conv2d_102/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_102/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_102/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_104/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_104/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_104/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_104/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_104/kernel/v"
  input: "training/Adam/conv2d_104/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_104/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_104/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_104/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_104/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_104/bias/v"
  input: "training/Adam/conv2d_104/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_104/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_104/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_99/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_99/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_99/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_99/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_99/kernel/v"
  input: "training/Adam/conv2d_99/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_99/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_99/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_99/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_99/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_99/bias/v"
  input: "training/Adam/conv2d_99/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_99/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_99/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\320\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_101/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_101/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 208
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_101/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_101/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_101/kernel/v"
  input: "training/Adam/conv2d_101/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_101/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_101/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 208
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 208
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_101/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_101/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_101/bias/v"
  input: "training/Adam/conv2d_101/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_101/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_101/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\005\000\000\000\005\000\000\000\020\000\000\0000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/conv2d_103/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/conv2d_103/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 5
        }
        dim {
          size: 5
        }
        dim {
          size: 16
        }
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_103/kernel/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_103/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_103/kernel/v"
  input: "training/Adam/conv2d_103/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_103/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_103/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 48
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 48
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/conv2d_103/bias/v"
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_103/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/conv2d_103/bias/v"
  input: "training/Adam/conv2d_103/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/conv2d_103/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/conv2d_103/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/v/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/v/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/v/Initializer/zeros"
  op: "Fill"
  input: "training/Adam/dense_6/kernel/v/Initializer/zeros/shape_as_tensor"
  input: "training/Adam/dense_6/kernel/v/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/dense_6/kernel/v"
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense_6/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/dense_6/kernel/v"
  input: "training/Adam/dense_6/kernel/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense_6/kernel/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/dense_6/kernel/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/v/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 13
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/v"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 13
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "training/Adam/dense_6/bias/v"
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/v/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense_6/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/v/Assign"
  op: "AssignVariableOp"
  input: "training/Adam/dense_6/bias/v"
  input: "training/Adam/dense_6/bias/v/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/dense_6/bias/v/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/dense_6/bias/v"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/learning_rate"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity"
  op: "Identity"
  input: "training/Adam/Identity/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/iter"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/add"
  op: "AddV2"
  input: "training/Adam/ReadVariableOp"
  input: "training/Adam/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Cast"
  op: "Cast"
  input: "training/Adam/add"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Identity_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/beta_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity_1"
  op: "Identity"
  input: "training/Adam/Identity_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/beta_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Identity_2"
  op: "Identity"
  input: "training/Adam/Identity_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow"
  op: "Pow"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Pow_1"
  op: "Pow"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub"
  op: "Sub"
  input: "training/Adam/sub/x"
  input: "training/Adam/Pow_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Sqrt"
  op: "Sqrt"
  input: "training/Adam/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_1"
  op: "Sub"
  input: "training/Adam/sub_1/x"
  input: "training/Adam/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/truediv"
  op: "RealDiv"
  input: "training/Adam/Sqrt"
  input: "training/Adam/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/mul"
  op: "Mul"
  input: "training/Adam/Identity"
  input: "training/Adam/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "training/Adam/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_2"
  op: "Sub"
  input: "training/Adam/sub_2/x"
  input: "training/Adam/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adam/sub_3"
  op: "Sub"
  input: "training/Adam/sub_3/x"
  input: "training/Adam/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_90/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_90/kernel"
  input: "training/Adam/conv2d_90/kernel/m"
  input: "training/Adam/conv2d_90/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_90/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_90/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_90/bias"
  input: "training/Adam/conv2d_90/bias/m"
  input: "training/Adam/conv2d_90/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_90/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_90/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_91/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_91/kernel"
  input: "training/Adam/conv2d_91/kernel/m"
  input: "training/Adam/conv2d_91/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_91/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_91/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_91/bias"
  input: "training/Adam/conv2d_91/bias/m"
  input: "training/Adam/conv2d_91/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_91/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_91/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_92/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_92/kernel"
  input: "training/Adam/conv2d_92/kernel/m"
  input: "training/Adam/conv2d_92/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_92/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_92/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_92/bias"
  input: "training/Adam/conv2d_92/bias/m"
  input: "training/Adam/conv2d_92/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_92/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_92/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_94/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_94/kernel"
  input: "training/Adam/conv2d_94/kernel/m"
  input: "training/Adam/conv2d_94/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_94/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_94/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_94/bias"
  input: "training/Adam/conv2d_94/bias/m"
  input: "training/Adam/conv2d_94/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_94/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_94/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_96/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_96/kernel"
  input: "training/Adam/conv2d_96/kernel/m"
  input: "training/Adam/conv2d_96/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_96/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_96/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_96/bias"
  input: "training/Adam/conv2d_96/bias/m"
  input: "training/Adam/conv2d_96/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_96/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_96/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_98/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_98/kernel"
  input: "training/Adam/conv2d_98/kernel/m"
  input: "training/Adam/conv2d_98/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_98/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_98/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_98/bias"
  input: "training/Adam/conv2d_98/bias/m"
  input: "training/Adam/conv2d_98/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_98/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_98/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_93/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_93/kernel"
  input: "training/Adam/conv2d_93/kernel/m"
  input: "training/Adam/conv2d_93/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_93/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_93/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_93/bias"
  input: "training/Adam/conv2d_93/bias/m"
  input: "training/Adam/conv2d_93/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_93/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_93/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_95/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_95/kernel"
  input: "training/Adam/conv2d_95/kernel/m"
  input: "training/Adam/conv2d_95/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_95/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_95/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_95/bias"
  input: "training/Adam/conv2d_95/bias/m"
  input: "training/Adam/conv2d_95/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_95/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_95/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_97/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_97/kernel"
  input: "training/Adam/conv2d_97/kernel/m"
  input: "training/Adam/conv2d_97/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_97/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_97/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_97/bias"
  input: "training/Adam/conv2d_97/bias/m"
  input: "training/Adam/conv2d_97/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_97/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_97/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_100/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_100/kernel"
  input: "training/Adam/conv2d_100/kernel/m"
  input: "training/Adam/conv2d_100/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_100/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_100/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_100/bias"
  input: "training/Adam/conv2d_100/bias/m"
  input: "training/Adam/conv2d_100/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_100/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_100/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_102/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_102/kernel"
  input: "training/Adam/conv2d_102/kernel/m"
  input: "training/Adam/conv2d_102/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_102/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_102/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_102/bias"
  input: "training/Adam/conv2d_102/bias/m"
  input: "training/Adam/conv2d_102/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_102/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_102/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_104/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_104/kernel"
  input: "training/Adam/conv2d_104/kernel/m"
  input: "training/Adam/conv2d_104/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_104/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_104/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_104/bias"
  input: "training/Adam/conv2d_104/bias/m"
  input: "training/Adam/conv2d_104/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_104/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_104/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_99/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_99/kernel"
  input: "training/Adam/conv2d_99/kernel/m"
  input: "training/Adam/conv2d_99/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_99/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_99/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_99/bias"
  input: "training/Adam/conv2d_99/bias/m"
  input: "training/Adam/conv2d_99/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_99/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_99/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_101/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_101/kernel"
  input: "training/Adam/conv2d_101/kernel/m"
  input: "training/Adam/conv2d_101/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_101/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_101/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_101/bias"
  input: "training/Adam/conv2d_101/bias/m"
  input: "training/Adam/conv2d_101/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_101/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_101/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_103/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_103/kernel"
  input: "training/Adam/conv2d_103/kernel/m"
  input: "training/Adam/conv2d_103/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_103/Conv2D_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_conv2d_103/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "conv2d_103/bias"
  input: "training/Adam/conv2d_103/bias/m"
  input: "training/Adam/conv2d_103/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/conv2d_103/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_103/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_dense_6/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_6/kernel"
  input: "training/Adam/dense_6/kernel/m"
  input: "training/Adam/dense_6/kernel/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/dense_6/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/update_dense_6/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "dense_6/bias"
  input: "training/Adam/dense_6/bias/m"
  input: "training/Adam/dense_6/bias/v"
  input: "training/Adam/Pow"
  input: "training/Adam/Pow_1"
  input: "training/Adam/Identity"
  input: "training/Adam/Identity_1"
  input: "training/Adam/Identity_2"
  input: "training/Adam/Const"
  input: "training/Adam/gradients/gradients/dense_6/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_6/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adam/Adam/Const"
  op: "Const"
  input: "^training/Adam/Adam/update_conv2d_100/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_100/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_101/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_101/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_102/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_102/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_103/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_103/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_104/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_104/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_90/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_90/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_91/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_91/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_92/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_92/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_93/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_93/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_94/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_94/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_95/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_95/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_96/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_96/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_97/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_97/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_98/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_98/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_99/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_99/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_dense_6/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_dense_6/kernel/ResourceApplyAdam"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adam/Adam/AssignAddVariableOp"
  op: "AssignAddVariableOp"
  input: "training/Adam/iter"
  input: "training/Adam/Adam/Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training/Adam/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "training/Adam/iter"
  input: "^training/Adam/Adam/AssignAddVariableOp"
  input: "^training/Adam/Adam/update_conv2d_100/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_100/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_101/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_101/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_102/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_102/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_103/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_103/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_104/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_104/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_90/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_90/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_91/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_91/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_92/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_92/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_93/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_93/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_94/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_94/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_95/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_95/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_96/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_96/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_97/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_97/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_98/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_98/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_99/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_conv2d_99/kernel/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_dense_6/bias/ResourceApplyAdam"
  input: "^training/Adam/Adam/update_dense_6/kernel/ResourceApplyAdam"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "training_1/group_deps"
  op: "NoOp"
  input: "^loss/mul"
  input: "^training/Adam/Adam/AssignAddVariableOp"
}
node {
  name: "VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_102/bias/v"
}
node {
  name: "VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_103/bias/v"
}
node {
  name: "VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_102/kernel/m"
}
node {
  name: "VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_104/kernel/m"
}
node {
  name: "VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_103/kernel/m"
}
node {
  name: "VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_98/kernel/v"
}
node {
  name: "VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_100/kernel/v"
}
node {
  name: "VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_95/bias/m"
}
node {
  name: "VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_91/bias/v"
}
node {
  name: "VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "total"
}
node {
  name: "VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "training/Adam/decay"
}
node {
  name: "VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_94/bias/m"
}
node {
  name: "VarIsInitializedOp_44"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_94/kernel/m"
}
node {
  name: "VarIsInitializedOp_45"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_91/kernel/v"
}
node {
  name: "VarIsInitializedOp_46"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_99/kernel/m"
}
node {
  name: "VarIsInitializedOp_47"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_94/kernel/v"
}
node {
  name: "VarIsInitializedOp_48"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_92/kernel/m"
}
node {
  name: "VarIsInitializedOp_49"
  op: "VarIsInitializedOp"
  input: "training/Adam/beta_1"
}
node {
  name: "VarIsInitializedOp_50"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_102/kernel/v"
}
node {
  name: "VarIsInitializedOp_51"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_99/bias/m"
}
node {
  name: "VarIsInitializedOp_52"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_97/bias/m"
}
node {
  name: "VarIsInitializedOp_53"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_101/bias/m"
}
node {
  name: "VarIsInitializedOp_54"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_92/bias/v"
}
node {
  name: "VarIsInitializedOp_55"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_93/bias/v"
}
node {
  name: "VarIsInitializedOp_56"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_97/kernel/v"
}
node {
  name: "VarIsInitializedOp_57"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_104/bias/v"
}
node {
  name: "VarIsInitializedOp_58"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_97/bias/v"
}
node {
  name: "VarIsInitializedOp_59"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_97/kernel/m"
}
node {
  name: "VarIsInitializedOp_60"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_92/kernel/v"
}
node {
  name: "VarIsInitializedOp_61"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_93/kernel/v"
}
node {
  name: "VarIsInitializedOp_62"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_95/kernel/m"
}
node {
  name: "VarIsInitializedOp_63"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_104/bias/m"
}
node {
  name: "VarIsInitializedOp_64"
  op: "VarIsInitializedOp"
  input: "training/Adam/iter"
}
node {
  name: "VarIsInitializedOp_65"
  op: "VarIsInitializedOp"
  input: "training/Adam/learning_rate"
}
node {
  name: "VarIsInitializedOp_66"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_90/bias/m"
}
node {
  name: "VarIsInitializedOp_67"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_101/bias/v"
}
node {
  name: "VarIsInitializedOp_68"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_90/kernel/m"
}
node {
  name: "VarIsInitializedOp_69"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_95/bias/v"
}
node {
  name: "VarIsInitializedOp_70"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_101/kernel/v"
}
node {
  name: "VarIsInitializedOp_71"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_101/kernel/m"
}
node {
  name: "VarIsInitializedOp_72"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_95/kernel/v"
}
node {
  name: "VarIsInitializedOp_73"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_103/kernel/v"
}
node {
  name: "VarIsInitializedOp_74"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_96/kernel/m"
}
node {
  name: "VarIsInitializedOp_75"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_103/bias/m"
}
node {
  name: "VarIsInitializedOp_76"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_91/bias/m"
}
node {
  name: "VarIsInitializedOp_77"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_98/bias/m"
}
node {
  name: "VarIsInitializedOp_78"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_102/bias/m"
}
node {
  name: "VarIsInitializedOp_79"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_104/kernel/v"
}
node {
  name: "VarIsInitializedOp_80"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense_6/bias/v"
}
node {
  name: "VarIsInitializedOp_81"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_91/kernel/m"
}
node {
  name: "VarIsInitializedOp_82"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_98/kernel/m"
}
node {
  name: "VarIsInitializedOp_83"
  op: "VarIsInitializedOp"
  input: "count"
}
node {
  name: "VarIsInitializedOp_84"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_100/kernel/m"
}
node {
  name: "VarIsInitializedOp_85"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_99/bias/v"
}
node {
  name: "VarIsInitializedOp_86"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense_6/kernel/v"
}
node {
  name: "VarIsInitializedOp_87"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_99/kernel/v"
}
node {
  name: "VarIsInitializedOp_88"
  op: "VarIsInitializedOp"
  input: "training/Adam/beta_2"
}
node {
  name: "VarIsInitializedOp_89"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_93/bias/m"
}
node {
  name: "VarIsInitializedOp_90"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_100/bias/m"
}
node {
  name: "VarIsInitializedOp_91"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense_6/bias/m"
}
node {
  name: "VarIsInitializedOp_92"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_90/bias/v"
}
node {
  name: "VarIsInitializedOp_93"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_96/bias/v"
}
node {
  name: "VarIsInitializedOp_94"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_98/bias/v"
}
node {
  name: "VarIsInitializedOp_95"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_100/bias/v"
}
node {
  name: "VarIsInitializedOp_96"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_90/kernel/v"
}
node {
  name: "VarIsInitializedOp_97"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_93/kernel/m"
}
node {
  name: "VarIsInitializedOp_98"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_96/kernel/v"
}
node {
  name: "VarIsInitializedOp_99"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_96/bias/m"
}
node {
  name: "VarIsInitializedOp_100"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_92/bias/m"
}
node {
  name: "VarIsInitializedOp_101"
  op: "VarIsInitializedOp"
  input: "training/Adam/dense_6/kernel/m"
}
node {
  name: "VarIsInitializedOp_102"
  op: "VarIsInitializedOp"
  input: "training/Adam/conv2d_94/bias/v"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^count/Assign"
  input: "^total/Assign"
  input: "^training/Adam/beta_1/Assign"
  input: "^training/Adam/beta_2/Assign"
  input: "^training/Adam/conv2d_100/bias/m/Assign"
  input: "^training/Adam/conv2d_100/bias/v/Assign"
  input: "^training/Adam/conv2d_100/kernel/m/Assign"
  input: "^training/Adam/conv2d_100/kernel/v/Assign"
  input: "^training/Adam/conv2d_101/bias/m/Assign"
  input: "^training/Adam/conv2d_101/bias/v/Assign"
  input: "^training/Adam/conv2d_101/kernel/m/Assign"
  input: "^training/Adam/conv2d_101/kernel/v/Assign"
  input: "^training/Adam/conv2d_102/bias/m/Assign"
  input: "^training/Adam/conv2d_102/bias/v/Assign"
  input: "^training/Adam/conv2d_102/kernel/m/Assign"
  input: "^training/Adam/conv2d_102/kernel/v/Assign"
  input: "^training/Adam/conv2d_103/bias/m/Assign"
  input: "^training/Adam/conv2d_103/bias/v/Assign"
  input: "^training/Adam/conv2d_103/kernel/m/Assign"
  input: "^training/Adam/conv2d_103/kernel/v/Assign"
  input: "^training/Adam/conv2d_104/bias/m/Assign"
  input: "^training/Adam/conv2d_104/bias/v/Assign"
  input: "^training/Adam/conv2d_104/kernel/m/Assign"
  input: "^training/Adam/conv2d_104/kernel/v/Assign"
  input: "^training/Adam/conv2d_90/bias/m/Assign"
  input: "^training/Adam/conv2d_90/bias/v/Assign"
  input: "^training/Adam/conv2d_90/kernel/m/Assign"
  input: "^training/Adam/conv2d_90/kernel/v/Assign"
  input: "^training/Adam/conv2d_91/bias/m/Assign"
  input: "^training/Adam/conv2d_91/bias/v/Assign"
  input: "^training/Adam/conv2d_91/kernel/m/Assign"
  input: "^training/Adam/conv2d_91/kernel/v/Assign"
  input: "^training/Adam/conv2d_92/bias/m/Assign"
  input: "^training/Adam/conv2d_92/bias/v/Assign"
  input: "^training/Adam/conv2d_92/kernel/m/Assign"
  input: "^training/Adam/conv2d_92/kernel/v/Assign"
  input: "^training/Adam/conv2d_93/bias/m/Assign"
  input: "^training/Adam/conv2d_93/bias/v/Assign"
  input: "^training/Adam/conv2d_93/kernel/m/Assign"
  input: "^training/Adam/conv2d_93/kernel/v/Assign"
  input: "^training/Adam/conv2d_94/bias/m/Assign"
  input: "^training/Adam/conv2d_94/bias/v/Assign"
  input: "^training/Adam/conv2d_94/kernel/m/Assign"
  input: "^training/Adam/conv2d_94/kernel/v/Assign"
  input: "^training/Adam/conv2d_95/bias/m/Assign"
  input: "^training/Adam/conv2d_95/bias/v/Assign"
  input: "^training/Adam/conv2d_95/kernel/m/Assign"
  input: "^training/Adam/conv2d_95/kernel/v/Assign"
  input: "^training/Adam/conv2d_96/bias/m/Assign"
  input: "^training/Adam/conv2d_96/bias/v/Assign"
  input: "^training/Adam/conv2d_96/kernel/m/Assign"
  input: "^training/Adam/conv2d_96/kernel/v/Assign"
  input: "^training/Adam/conv2d_97/bias/m/Assign"
  input: "^training/Adam/conv2d_97/bias/v/Assign"
  input: "^training/Adam/conv2d_97/kernel/m/Assign"
  input: "^training/Adam/conv2d_97/kernel/v/Assign"
  input: "^training/Adam/conv2d_98/bias/m/Assign"
  input: "^training/Adam/conv2d_98/bias/v/Assign"
  input: "^training/Adam/conv2d_98/kernel/m/Assign"
  input: "^training/Adam/conv2d_98/kernel/v/Assign"
  input: "^training/Adam/conv2d_99/bias/m/Assign"
  input: "^training/Adam/conv2d_99/bias/v/Assign"
  input: "^training/Adam/conv2d_99/kernel/m/Assign"
  input: "^training/Adam/conv2d_99/kernel/v/Assign"
  input: "^training/Adam/decay/Assign"
  input: "^training/Adam/dense_6/bias/m/Assign"
  input: "^training/Adam/dense_6/bias/v/Assign"
  input: "^training/Adam/dense_6/kernel/m/Assign"
  input: "^training/Adam/dense_6/kernel/v/Assign"
  input: "^training/Adam/iter/Assign"
  input: "^training/Adam/learning_rate/Assign"
}
versions {
  producer: 134
}
